name: Build Docker Image CI # Name of the workflow

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Trigger on push events to the main branch
  pull_request:
    branches: [ "main" ] # Also trigger on pull requests to main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build: # Name of the job
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4 # Use a pre-built GitHub Action

      # Optional: Set up Python (if you needed to run tests before building)
      # - name: Set up Python 3.9
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.9'

      # - name: Install dependencies (if needed for tests)
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt

      # - name: Run Tests (Add your tests here if you have them!)
      #   run: |
      #     # Example: python -m unittest discover tests

      # Log in to Docker Hub (replace with your registry if different)
      # You need to add DOCKERHUB_USERNAME and DOCKERHUB_TOKEN as secrets in your GitHub repo settings
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Use an Access Token, not your password

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as build context
          push: true # Actually push the image
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sentiment-api:latest # Tag image (username/repo:tag)